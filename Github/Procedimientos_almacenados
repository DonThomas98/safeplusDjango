
---1 PROCEDURE QUE LISTA LOS CLIENTES QUE ESTAN EXTENDIDOS
create or replace procedure prc_listar_cliente(clientes out SYS_REFCURSOR)
is

begin
open clientes for  select * from auth_user join account_UserProfile on auth_user.id=account_UserProfile.user_id  where is_staff=0;
end;

---2 LISTA TRABAJADORES QUE ESTEN EXTENDIDOS


create or replace procedure prc_listar_trabajadores(trabajadores out SYS_REFCURSOR)
is

begin
open trabajadores for  select * from auth_user join account_UserProfile on auth_user.id=account_UserProfile.user_id  where is_staff=1 and IS_SUPERUSER=0;
end;


---3 ESTE PROCEDURE CREA CLIENTES EN AUTH_USER , AUN NO EXTENDIDOS
create or replace procedure prc_insertar_cliente(
    v_pass         varchar2,
    v_usuario      varchar2,
    v_nombre       varchar2,
    v_apellido     varchar2,
    v_correo       varchar2
)is
begin

insert into auth_user  (PASSWORD,IS_SUPERUSER,USERNAME, FIRST_NAME, LAST_NAME,EMAIL,IS_STAFF,IS_ACTIVE,DATE_JOINED)
VALUES                  (v_pass,0,v_usuario, v_nombre, v_apellido, v_correo,0,1,CURRENT_DATE); 
commit;


end;


---ESTE PROCEDURE EXTIENDE EL MODELO CLIENTE PERMITIENDO UNA MAYOR ESPECIFICACION DE AUTH_USER

create or replace procedure prc_insertar_datos_cliente(
    v_rut         number,
    v_sueldo      number,
    v_edad        number,
    v_userid       number
)is
begin

insert into account_userprofile  (rut,sueldo,edad, user_id)
VALUES (v_rut,v_sueldo, v_edad, v_userid); 
commit;


end;


---ESTE PROCEDURA LISTA LOS TRABAJADORES (IS_STAFF=1 AND ID_SUPERUSER=0) QUE AUN NO HAN SIDO EXTENDIDOS
---TRAE EN POCISION 0 LA ID DE AUTH_USER Y EN POCISION 1 USERNAME DE AUTH_USER
create or replace procedure prc_listar_id_clientes(clientes_datos out SYS_REFCURSOR)
is

begin
open clientes_datos for  select auth_user.id,auth_user.username 
from auth_user left join account_userprofile
 on auth_user.id=account_userprofile.user_id
   where account_userprofile.user_id is null and is_staff=0 ;

end;



----INSERT USUARIOS CON IS_STAFF=1 EN AUTH_USER PARA DAR ENTENDER QUE SON TRABAJADORES
create or replace procedure prc_insertar_trabajadores(
    v_pass         varchar2,
    v_usuario      varchar2,
    v_nombre       varchar2,
    v_apellido     varchar2,
    v_correo       varchar2
)is
begin

insert into auth_user  (PASSWORD,IS_SUPERUSER,USERNAME, FIRST_NAME, LAST_NAME, EMAIL,  IS_STAFF,IS_ACTIVE,DATE_JOINED)
VALUES                  (v_pass,        0,    v_usuario, v_nombre, v_apellido, v_correo,  1,         1,   CURRENT_DATE); 
commit;


end;



---TRAE LOS TRABAJADORE DE AUTH_USER IS_STAFF=1 QUE AUN NO ESTAN ASOCIADOS A ACCOUNT_PROFILE (EL MODELO USER EXTENDIDO)
--0 = ID
--1 = USERNAME

create or replace procedure prc_listar_id_trabajadores(trabajadores_datos out SYS_REFCURSOR)
is

begin
open trabajadores_datos for  select auth_user.id,auth_user.username 
from auth_user left join account_userprofile
 on auth_user.id=account_userprofile.user_id
   where account_userprofile.user_id is null and is_staff=1 and is_superuser=0 ;

end;


--EXTIENDE EL usuario AL MODELO ACCOUNT_USERPROFILE , PARA DIFERENCIAR CLI/TRAB EN SU RESPECTIVO MODELO SE TRAERA LISTARCLIENTE Y LISTAR TRABAJADOR


create or replace procedure prc_insertar_datos_extendidos(
    v_rut         number,
    v_sueldo      number,
    v_edad        number,
    v_userid       number
)is
begin

insert into account_userprofile  (rut,sueldo,edad, user_id)
VALUES (v_rut,v_sueldo, v_edad, v_userid); 
commit;


end;

---LISTA MATERIALES
--0 =ID
--1 =MATERIAL

create or replace procedure prc_listar_materiales(clientes out SYS_REFCURSOR)
is

begin
open clientes for  select ID,MATERIAL from material_capacitaciones;
end;

---iNSERTA MATERIALES A USAR EN CAPACITACION
--0 ID
--1 MATERIAL

create or replace procedure prc_insertar_materiales_capacitacion(
    v_material        varchar2

)is
begin

insert into material_capacitaciones  (material)
VALUES (v_material); 
commit;


end;




-- INSERTA CANTIDAD DE MATERIALES A USAR EN UNA CAPACITACION (MATERIAL SOLICITADO)

create or replace procedure prc_insertar_materiales_solicitados(

    v_cantidad      number,
    v_materialid      number,
    v_capacitacionid  number
)is
begin

insert into material_solicitado  (cantidad,id_material_id,MATERIAL_CAPACITACION_ID)
VALUES (v_cantidad,v_materialid,v_capacitacionid); 


commit;
end;


---CREA LA CAPACITACION


create or replace procedure prc_crear_capacitacion(

    v_fecha_capacitacion  date,
    v_rut_cliente       number,
    v_rut_trabajador    number

    
)is
begin

insert into capacitacion  (fecha_solicitud,fecha_capacitacion,rut_cliente_id,rut_trabajador_id)
VALUES                     (CURRENT_DATE, v_fecha_capacitacion,v_rut_cliente,v_rut_trabajador); 


commit;


end;

--ESTE LISTAR TRAE material_capacitaciones

create or replace procedure prc_listar_capacitaciones(capacitaciones out SYS_REFCURSOR)
is

begin
open capacitaciones for  select * from capacitacion;

end;




--ESTE LISTAR MUESTRA LA CANTIDAD DE MATERIALES-MATERIALES (MATERIAL_SOLICITADO) QUE AUN NO A SIDO ASIGNADO A UNA CAPACITACION
--PENDIENTE
create or replace procedure prc_listar_materiales_capacitacion(material_solicitado out SYS_REFCURSOR)
is

begin
open material_solicitado for  
select * from material_solicitado  left join capacitacion on material_solicitado.id=capacitacion.id_materialsolicitado_id where capacitacion.id_materialsolicitado_id is null;
end;



--
--Lista tipos de ACCIDENTE
--0 ID
--1 DESCRIPCION
create or replace procedure prc_listar_tipo_accidente(accidente out SYS_REFCURSOR)
is

begin
open accidente for  select id,descripcion from tipo_accidente;
end;



--INSERTA EN LA TABLA ACCIDENTE
create or replace procedure prc_insertar_accidente(
    v_fecha               date,
    v_tipo_accidente      number

)is
begin

insert into accidente   (fecha_accidente,id_tipo_accidente_id)
VALUES                  (v_fecha,v_tipo_accidente); 
commit;
end;

--INSERTA LA DESCRIPCION LA TABLA TIPO_ACCIDENTE

create or replace procedure prc_insertar_tipo_accidente(
    v_descripcion          varchar2

)is
begin

insert into tipo_accidente   (descripcion)
VALUES (v_descripcion); 
commit;
end;



--lISTA LA TABLA ACCIDENTE
create or replace procedure prc_listar_accidente(accidente out SYS_REFCURSOR)
is

begin
open accidente for  select * from accidente ;
end;



---Inserta en registro accidente
create or replace procedure prc_insertar_registro_accidente(
v_gravedad            varchar2,
v_idaccidenteid       number,
v_ruttrabajadorid     number

)is
begin
insert into registro_accidentados   (gravedad,id_accidente_id,RUT_TRABAJADOR_ID)
VALUES                              (v_gravedad,v_idaccidenteid,v_ruttrabajadorid); 
commit;
end;



--Insert Visita terreno


create or replace procedure prc_insertar_visita_terreno(
    v_fecha_visita           date,
    v_rutcliente_id       number,
    v_ruttrabajadorid     number

)is
begin

insert into visita_terreno   (fecha_visita,rut_cliente_id,rut_trabajador_id)
VALUES (v_fecha_visita,v_rutcliente_id,v_ruttrabajadorid); 
commit;



end;




