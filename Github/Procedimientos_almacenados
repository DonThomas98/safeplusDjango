#1
create or replace procedure prc_listar_cliente(clientes out SYS_REFCURSOR)
is

begin
open clientes for  select * from auth_user join account_UserProfile on auth_user.id=account_UserProfile.user_id  where is_staff=0;
end;



#2 seleccionar trabajadores
create or replace procedure prc_listar_trabajadores(trabajadores out SYS_REFCURSOR)
is

begin
open trabajadores for  select * from auth_user join account_UserProfile on auth_user.id=account_UserProfile.user_id  where is_staff=1 and IS_SUPERUSER=0;
end;


#3

create or replace procedure prc_insertar_cliente(
    v_pass         varchar2,
    v_usuario      varchar2,
    v_nombre       varchar2,
    v_apellido     varchar2,
    v_correo       varchar2
)is
begin

insert into auth_user  (PASSWORD,IS_SUPERUSER,USERNAME, FIRST_NAME, LAST_NAME,EMAIL,IS_STAFF,IS_ACTIVE,DATE_JOINED)
VALUES (v_pass,0,v_usuario, v_nombre, v_apellido, v_correo,0,1,CURRENT_DATE); 
commit;


end;

#4
##PARA EXTENDER LOS DATOS DE USUARIO

create or replace procedure prc_insertar_datos_cliente(
    v_rut         number,
    v_sueldo      number,
    v_edad        number,
    v_userid       number
)is
begin

insert into account_userprofile  (rut,sueldo,edad, user_id)
VALUES (v_rut,v_sueldo, v_edad, v_userid); 
commit;


end;

#5
##PARA CONSEGUIR LA LISTA DE CLIENTES que no tienen su rut y no son trabajadores

create or replace procedure prc_listar_id_clientes(clientes_datos out SYS_REFCURSOR)
is

begin
open clientes_datos for  select auth_user.id,auth_user.username 
from auth_user left join account_userprofile
 on auth_user.id=account_userprofile.user_id
   where account_userprofile.user_id is null and is_staff=0 ;

end;

#6

create or replace procedure prc_insertar_trabajadores(
    v_pass         varchar2,
    v_usuario      varchar2,
    v_nombre       varchar2,
    v_apellido     varchar2,
    v_correo       varchar2
)is
begin

insert into auth_user  (PASSWORD,IS_SUPERUSER,USERNAME, FIRST_NAME, LAST_NAME,EMAIL,IS_STAFF,IS_ACTIVE,DATE_JOINED)
VALUES (v_pass,0,v_usuario, v_nombre, v_apellido, v_correo,1,1,CURRENT_DATE); 
commit;


end;

#7
##PARA CONSEGUIR LA LISTA DE TRABAJADORES que no tienen su rut .

create or replace procedure prc_listar_id_trabajadores(trabajadores_datos out SYS_REFCURSOR)
is

begin
open trabajadores_datos for  select auth_user.id,auth_user.username 
from auth_user left join account_userprofile
 on auth_user.id=account_userprofile.user_id
   where account_userprofile.user_id is null and is_staff=1 and is_superuser=0 ;

end;

#8

create or replace procedure prc_insertar_datos_trabajador(
    v_rut         number,
    v_sueldo      number,
    v_edad        number,
    v_userid       number
)is
begin

insert into account_userprofile  (rut,sueldo,edad, user_id)
VALUES (v_rut,v_sueldo, v_edad, v_userid); 
commit;


end;

#9 Listar Materiales


create or replace procedure prc_listar_materiales(clientes out SYS_REFCURSOR)
is

begin
open clientes for  select * from material_capacitaciones;
end;

## 10 INSERTAR MATERIALES A USAR EN LA CAPACITACION

create or replace procedure prc_insertar_materiales_capacitacion(
    v_material        varchar2

)is
begin

insert into material_capacitaciones  (material)
VALUES (v_material); 
commit;


end;

##11 INSERTA CANTIDAD DE MATERIALES A USAR EN UNA CAPACITACION


create or replace procedure prc_insertar_materiales_solicitados(

    v_cantidad      number,
    v_material      number,
    v_capacitacion  number
)is
begin

insert into material_solicitado  (cantidad,id_material_id,MATERIAL_CAPACITACION_ID)
VALUES (v_cantidad,v_material,v_capacitacion); 


commit;
end;

#12 Lista materiales los cuales aun no han sido usados pendiente

create or replace procedure prc_listar_materiales_capacitacion(material_solicitado out SYS_REFCURSOR)
is

begin
open material_solicitado for  
select * from material_solicitado  left join capacitacion on material_solicitado.id=capacitacion.id_materialsolicitado_id where capacitacion.id_materialsolicitado_id is null;
end;


##13 Crea la capacitacion pendiente



create or replace procedure prc_crear_capacitacion(

    v_fecha_capacitacion  date,
    v_rut_cliente       number,
    v_rut_trabajador    number

    
)is
begin

insert into capacitacion  (fecha_solicitud,fecha_capacitacion,rut_cliente_id,rut_trabajador_id)
VALUES                     (CURRENT_DATE, v_fecha_capacitacion,v_rut_cliente,v_rut_trabajador); 


commit;


end;

   ##LISTRA CLIENTES 
create or replace procedure prc_listar_cliente2(clientes out SYS_REFCURSOR)
is

begin
open clientes for select auth_user.id,auth_user.username 
from auth_user  join account_userprofile
 on auth_user.id=account_userprofile.user_id
   where account_userprofile.user_id is not null and is_staff=0; 
end;



##Lista tipos de ACCIDENTE

create or replace procedure prc_listar_tipo_accidente(accidente out SYS_REFCURSOR)
is

begin
open accidente for  select * from tipo_accidente;
end;




##
create or replace procedure prc_insertar_accidente(
    v_fecha               date,
    v_tipo_accidente      number

)is
begin

insert into accidente   (fecha_accidente,id_tipo_accidente_id)
VALUES (v_fecha,v_tipo_accidente); 
commit;



end;


##

create or replace procedure prc_insertar_tipo_accidente(
    v_descripcion          varchar2

)is
begin

insert into tipo_accidente   (descripcion)
VALUES (v_descripcion); 
commit;



end;


##

create or replace procedure prc_listar_accidente(accidente out SYS_REFCURSOR)
is

begin
open accidente for  select * from accidente ;




end;





##INSERT REGISTRO ACCIDENTADOs

create or replace procedure prc_insertar_registro_accidente(
    v_accidente            number,
    v_ruttrabajador     number

)is
begin

insert into registro_accidentados   (id_accidente_id,RUT_TRABAJADOR_ID)
VALUES (v_accidente,v_ruttrabajador); 
commit;



end;
create or replace procedure prc_listar_accidente_registro(accidente out SYS_REFCURSOR)
is

begin
open accidente for select * from accidente;




end;